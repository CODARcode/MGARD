name: build
on: [push, pull_request]
env:
        MOAB_CACHE_KEY: "MOAB-5.2.1"
        MOAB_INSTALL_PREFIX: "${{ github.workspace }}/moab"
        CATCH2_CACHE_KEY: "Catch2-3.0.0"
        CATCH2_INSTALL_PREFIX: "${{ github.workspace }}/catch2"
        MGARD_CACHE_KEY: "MGARD-${{ github.sha }}"
        MGARD_INSTALL_PREFIX: "${{ github.workspace }}/mgard"
        MGARD_BUILD_TYPE: "Release"
        MGARD_BUILD_DIR: "${{ github.workspace }}/build"
jobs:
        build-MOAB:
                runs-on: ubuntu-latest
                steps:
                        - run: sudo apt-get install autoconf autogen libtool mpich libmpich-dev liblapack-dev
                        - name: cache-MOAB
                          id: cache-MOAB
                          uses: actions/cache@v2.1.6
                          with:
                                  key: "${{ env.MOAB_CACHE_KEY }}"
                                  path: "${{ env.MOAB_INSTALL_PREFIX }}"
                        - name: build-MOAB
                          if: steps.cache-MOAB.outputs.cache-hit != 'true'
                          run: |
                                  wget https://ftp.mcs.anl.gov/pub/fathom/moab-5.2.1.tar.gz
                                  gunzip "moab-5.2.1.tar.gz"
                                  tar --file "moab-5.2.1.tar" --extract
                                  cd "moab-5.2.1"
                                  autoreconf --force --install
                                  ./configure --prefix="${{ env.MOAB_INSTALL_PREFIX }}"
                                  make --jobs
                                  make install

        build-Catch2:
                runs-on: ubuntu-latest
                steps:
                        - name: cache-Catch2
                          id: cache-Catch2
                          uses: actions/cache@v2.1.6
                          with:
                                  key: "${{ env.CATCH2_CACHE_KEY }}"
                                  path: "${{ env.CATCH2_INSTALL_PREFIX }}"
                        - name: build-Catch2
                          if: steps.cache-Catch2.outputs.cache-hit != 'true'
                          run: |
                                  wget https://github.com/catchorg/Catch2/archive/v3.0.0-preview3.tar.gz
                                  gunzip "v3.0.0-preview3.tar.gz"
                                  tar --file "v3.0.0-preview3.tar" --extract
                                  cmake -S "Catch2-3.0.0-preview3" -B "build" -DCMAKE_INSTALL_PREFIX="${{ env.CATCH2_INSTALL_PREFIX }}"
                                  cmake --build "build" --parallel
                                  cmake --install "build"

        build-MGARD:
                needs: [build-MOAB, build-Catch2]
                runs-on: ubuntu-latest
                steps:
                        - run: sudo apt-get install mpich libmpich-dev liblapack-dev libzstd1 libzstd-dev libarchive-dev libyaml-cpp-dev libtclap-dev
                        - name: checkout
                          uses: actions/checkout@v2.3.4
                        - name: fetch-MOAB
                          uses: actions/cache@v2.1.6
                          with:
                                  key: "${{ env.MOAB_CACHE_KEY }}"
                                  path: "${{ env.MOAB_INSTALL_PREFIX }}"
                        - name: fetch-Catch2
                          uses: actions/cache@v2.1.6
                          with:
                                  key: "${{ env.CATCH2_CACHE_KEY }}"
                                  path: "${{ env.CATCH2_INSTALL_PREFIX }}"
                        - name: configure
                          run: cmake -S . -B "${{ env.MGARD_BUILD_DIR }}" -DCMAKE_PREFIX_PATH="${{ env.MOAB_INSTALL_PREFIX }};${{ env.CATCH2_INSTALL_PREFIX }}" -DCMAKE_BUILD_TYPE="${{ env.MGARD_BUILD_TYPE }}" -DCMAKE_INSTALL_PREFIX="${{ env.MGARD_INSTALL_PREFIX }}"
                        - name: build
                          run: cmake --build "${{ env.MGARD_BUILD_DIR }}" --parallel
                        - name: test
                          run: "${{ env.MGARD_BUILD_DIR }}/bin/tests"
                        - name: install
                          run: cmake --install "${{ env.MGARD_BUILD_DIR }}"
                        - name: cache-MGARD
                          uses: actions/cache@v2.1.6
                          with:
                                  key: "${{ env.MGARD_CACHE_KEY }}"
                                  path: "${{ env.MGARD_INSTALL_PREFIX }}"
